/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BaseInternal__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Internal__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: "ERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MetadataInternal__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlInternal__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlInternal__factory>;
    getContractFactory(
      name: "DIMORegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DIMORegistry__factory>;
    getContractFactory(
      name: "Eip712Checker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Eip712Checker__factory>;
    getContractFactory(
      name: "Getter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Getter__factory>;
    getContractFactory(
      name: "Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Metadata__factory>;
    getContractFactory(
      name: "Root",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Root__factory>;
    getContractFactory(
      name: "Vehicle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vehicle__factory>;
    getContractFactory(
      name: "IEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvents__factory>;

    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC721Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BaseInternal>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Internal>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: "ERC721MetadataInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MetadataInternal>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlInternal>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlInternal>;
    getContractAt(
      name: "DIMORegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DIMORegistry>;
    getContractAt(
      name: "Eip712Checker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Eip712Checker>;
    getContractAt(
      name: "Getter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Getter>;
    getContractAt(
      name: "Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Metadata>;
    getContractAt(
      name: "Root",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Root>;
    getContractAt(
      name: "Vehicle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vehicle>;
    getContractAt(
      name: "IEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvents>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
