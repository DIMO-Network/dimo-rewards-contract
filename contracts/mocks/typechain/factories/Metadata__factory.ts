/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Metadata, MetadataInterface } from "../Metadata";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c28806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063162094c41461003b57806355f804b314610057575b600080fd5b610055600480360381019061005091906106e1565b610073565b005b610071600480360381019061006c9190610741565b61010b565b005b6000801b61008081610138565b61009a8461008c610145565b61017290919063ffffffff16565b6100d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d0906107eb565b60405180910390fd5b82826100e3610192565b60030160008781526020019081526020016000209190610104929190610599565b5050505050565b6000801b61011881610138565b8282610122610192565b6002019190610132929190610599565b50505050565b61014281336101bf565b50565b6000807f3c7bf052874fa81625121783266a03507bd2cd48b16e571c01a04e8dd3fb07a690508091505090565b600061018a828460000161026390919063ffffffff16565b905092915050565b6000807f99574a7094154bb123ae6ae102096f0bf9679b85a5cd1e727aaa0ae5f132e6b190508091505090565b6101c9828261027d565b61025f576101ec8173ffffffffffffffffffffffffffffffffffffffff166102f1565b61020360208460001c61032490919063ffffffff16565b60405160200161021492919061091d565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025691906109a1565b60405180910390fd5b5050565b6000610275836000018360001b610549565b905092915050565b600061028761056c565b600001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606061031d60148373ffffffffffffffffffffffffffffffffffffffff1661032490919063ffffffff16565b9050919050565b60606000600283600261033791906109f2565b6103419190610a4c565b67ffffffffffffffff81111561035a57610359610aa2565b5b6040519080825280601f01601f19166020018201604052801561038c5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103c4576103c3610ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061042857610427610ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002020190505b60018111156104fb577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106104a2576104a1610ad1565b5b1a60f81b8282815181106104b9576104b8610ad1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080600190039050610463565b506000841461053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053690610b72565b60405180910390fd5b8091505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000807f0166504e5ccb463bc7d5bd33317cff1a2c4b9d767f1c547638f719d36741a1d090508091505090565b8280546105a590610bc1565b90600052602060002090601f0160209004810192826105c7576000855561060e565b82601f106105e057803560ff191683800117855561060e565b8280016001018555821561060e579182015b8281111561060d5782358255916020019190600101906105f2565b5b50905061061b919061061f565b5090565b5b80821115610638576000816000905550600101610620565b5090565b600080fd5b600080fd5b6000819050919050565b61065981610646565b811461066457600080fd5b50565b60008135905061067681610650565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106a1576106a061067c565b5b8235905067ffffffffffffffff8111156106be576106bd610681565b5b6020830191508360018202830111156106da576106d9610686565b5b9250929050565b6000806000604084860312156106fa576106f961063c565b5b600061070886828701610667565b935050602084013567ffffffffffffffff81111561072957610728610641565b5b6107358682870161068b565b92509250509250925092565b600080602083850312156107585761075761063c565b5b600083013567ffffffffffffffff81111561077657610775610641565b5b6107828582860161068b565b92509250509250929050565b600082825260208201905092915050565b7f4e465420646f6573206e6f742065786973740000000000000000000000000000600082015250565b60006107d560128361078e565b91506107e08261079f565b602082019050919050565b60006020820190508181036000830152610804816107c8565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061084c60178361080b565b915061085782610816565b601782019050919050565b600081519050919050565b60005b8381101561088b578082015181840152602081019050610870565b8381111561089a576000848401525b50505050565b60006108ab82610862565b6108b5818561080b565b93506108c581856020860161086d565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061090760118361080b565b9150610912826108d1565b601182019050919050565b60006109288261083f565b915061093482856108a0565b915061093f826108fa565b915061094b82846108a0565b91508190509392505050565b6000601f19601f8301169050919050565b600061097382610862565b61097d818561078e565b935061098d81856020860161086d565b61099681610957565b840191505092915050565b600060208201905081810360008301526109bb8184610968565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109fd82610646565b9150610a0883610646565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4157610a406109c3565b5b828202905092915050565b6000610a5782610646565b9150610a6283610646565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9757610a966109c3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f55696e745574696c733a20686578206c656e67746820696e737566666963696560008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b5c60228361078e565b9150610b6782610b00565b604082019050919050565b60006020820190508181036000830152610b8b81610b4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bd957607f821691505b602082108103610bec57610beb610b92565b5b5091905056fea264697066735822122058ab5c320c30df6d163e5598af70ff4069be1d9bf3c235f91e49eed8fd5f881664736f6c634300080d0033";

export class Metadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Metadata> {
    return super.deploy(overrides || {}) as Promise<Metadata>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Metadata {
    return super.attach(address) as Metadata;
  }
  connect(signer: Signer): Metadata__factory {
    return super.connect(signer) as Metadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetadataInterface {
    return new utils.Interface(_abi) as MetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Metadata {
    return new Contract(address, _abi, signerOrProvider) as Metadata;
  }
}
