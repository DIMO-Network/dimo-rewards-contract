/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AccessControl, AccessControlInterface } from "../AccessControl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d5e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063248a9ca31461005c5780632f2ff15d1461008c57806336568abe146100a857806391d14854146100c4578063d547741f146100f4575b600080fd5b610076600480360381019061007191906107c9565b610110565b6040516100839190610805565b60405180910390f35b6100a660048036038101906100a1919061087e565b610122565b005b6100c260048036038101906100bd919061087e565b610143565b005b6100de60048036038101906100d9919061087e565b6101bf565b6040516100eb91906108d9565b60405180910390f35b61010e6004803603810190610109919061087e565b6101d3565b005b600061011b826101f4565b9050919050565b61012b826101f4565b6101348161021d565b61013e838361022a565b505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a890610977565b60405180910390fd5b6101bb828261030d565b5050565b60006101cb83836103f1565b905092915050565b6101dc826101f4565b6101e58161021d565b6101ef838361030d565b505050565b60006101fe610465565b6000016000838152602001908152602001600020600101549050919050565b6102278133610492565b50565b61023482826103f1565b610309576001610242610465565b600001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61031782826103f1565b156103ed576000610326610465565b600001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006103fb610465565b600001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807f0166504e5ccb463bc7d5bd33317cff1a2c4b9d767f1c547638f719d36741a1d090508091505090565b61049c82826103f1565b610532576104bf8173ffffffffffffffffffffffffffffffffffffffff16610536565b6104d660208460001c61056990919063ffffffff16565b6040516020016104e7929190610aa9565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105299190610b2d565b60405180910390fd5b5050565b606061056260148373ffffffffffffffffffffffffffffffffffffffff1661056990919063ffffffff16565b9050919050565b60606000600283600261057c9190610b88565b6105869190610be2565b67ffffffffffffffff81111561059f5761059e610c38565b5b6040519080825280601f01601f1916602001820160405280156105d15781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061060957610608610c67565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061066d5761066c610c67565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002020190505b6001811115610740577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106106e7576106e6610c67565b5b1a60f81b8282815181106106fe576106fd610c67565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806001900390506106a8565b5060008414610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90610d08565b60405180910390fd5b8091505092915050565b600080fd5b6000819050919050565b6107a681610793565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de61078e565b5b60006107ed848285016107b4565b91505092915050565b6107ff81610793565b82525050565b600060208201905061081a60008301846107f6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084b82610820565b9050919050565b61085b81610840565b811461086657600080fd5b50565b60008135905061087881610852565b92915050565b600080604083850312156108955761089461078e565b5b60006108a3858286016107b4565b92505060206108b485828601610869565b9150509250929050565b60008115159050919050565b6108d3816108be565b82525050565b60006020820190506108ee60008301846108ca565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000610961602f836108f4565b915061096c82610905565b604082019050919050565b6000602082019050818103600083015261099081610954565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006109d8601783610997565b91506109e3826109a2565b601782019050919050565b600081519050919050565b60005b83811015610a175780820151818401526020810190506109fc565b83811115610a26576000848401525b50505050565b6000610a37826109ee565b610a418185610997565b9350610a518185602086016109f9565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000610a93601183610997565b9150610a9e82610a5d565b601182019050919050565b6000610ab4826109cb565b9150610ac08285610a2c565b9150610acb82610a86565b9150610ad78284610a2c565b91508190509392505050565b6000601f19601f8301169050919050565b6000610aff826109ee565b610b0981856108f4565b9350610b198185602086016109f9565b610b2281610ae3565b840191505092915050565b60006020820190508181036000830152610b478184610af4565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9382610b4f565b9150610b9e83610b4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd757610bd6610b59565b5b828202905092915050565b6000610bed82610b4f565b9150610bf883610b4f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2d57610c2c610b59565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f55696e745574696c733a20686578206c656e67746820696e737566666963696560008201527f6e74000000000000000000000000000000000000000000000000000000000000602082015250565b6000610cf26022836108f4565b9150610cfd82610c96565b604082019050919050565b60006020820190508181036000830152610d2181610ce5565b905091905056fea264697066735822122011c51e5e7c0da041e503fadad5ed82a8895f621c83d67d7a6f2b1bcc4849155164736f6c634300080d0033";

export class AccessControl__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControl> {
    return super.deploy(overrides || {}) as Promise<AccessControl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControl {
    return super.attach(address) as AccessControl;
  }
  connect(signer: Signer): AccessControl__factory {
    return super.connect(signer) as AccessControl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlInterface {
    return new utils.Interface(_abi) as AccessControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControl {
    return new Contract(address, _abi, signerOrProvider) as AccessControl;
  }
}
