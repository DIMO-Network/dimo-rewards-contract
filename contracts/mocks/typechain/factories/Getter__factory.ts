/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getter, GetterInterface } from "../Getter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nodeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "attribute",
        type: "string",
      },
    ],
    name: "getInfo",
    outputs: [
      {
        internalType: "string",
        name: "info",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNodeType",
    outputs: [
      {
        internalType: "uint256",
        name: "nodeType",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getParentNode",
    outputs: [
      {
        internalType: "uint256",
        name: "parentNode",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611168806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370c3e13b1161005b57806370c3e13b1461012957806395d89b4114610159578063c5e80c8514610177578063c87b56dd146101a757610088565b806306fdde031461008d5780635cc148f3146100ab5780636352211e146100db5780636c0360eb1461010b575b600080fd5b6100956101d7565b6040516100a29190610b17565b60405180910390f35b6100c560048036038101906100c09190610bde565b610272565b6040516100d29190610b17565b60405180910390f35b6100f560048036038101906100f09190610c3e565b610343565b6040516101029190610cac565b60405180910390f35b610113610355565b6040516101209190610b17565b60405180910390f35b610143600480360381019061013e9190610c3e565b6103f0565b6040516101509190610cd6565b60405180910390f35b610161610419565b60405161016e9190610b17565b60405180910390f35b610191600480360381019061018c9190610c3e565b6104b4565b60405161019e9190610cd6565b60405180910390f35b6101c160048036038101906101bc9190610c3e565b6104dd565b6040516101ce9190610b17565b60405180910390f35b60606101e16106f1565b60000180546101ef90610d20565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610d20565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b5050505050905090565b606061027c61071e565b600301600085815260200190815260200160002060020183836040516102a3929190610d90565b908152602001604051809103902080546102bc90610d20565b80601f01602080910402602001604051908101604052809291908181526020018280546102e890610d20565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b505050505090509392505050565b600061034e8261074b565b9050919050565b606061035f6106f1565b600201805461036d90610d20565b80601f016020809104026020016040519081016040528092919081815260200182805461039990610d20565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b60006103fa61071e565b6003016000838152602001908152602001600020600001549050919050565b60606104236106f1565b600101805461043190610d20565b80601f016020809104026020016040519081016040528092919081815260200182805461045d90610d20565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b5050505050905090565b60006104be61071e565b6003016000838152602001908152602001600020600101549050919050565b60606104f9826104eb6107e5565b61081290919063ffffffff16565b610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610df5565b60405180910390fd5b60006105426106f1565b90506000816003016000858152602001908152602001600020805461056690610d20565b80601f016020809104026020016040519081016040528092919081815260200182805461059290610d20565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b5050505050905060008260020180546105f790610d20565b80601f016020809104026020016040519081016040528092919081815260200182805461062390610d20565b80156106705780601f1061064557610100808354040283529160200191610670565b820191906000526020600020905b81548152906001019060200180831161065357829003601f168201915b505050505090506000815103610688578193506106e9565b6000825111156106bb5780826040516020016106a5929190610e46565b60405160208183030381529060405293506106e8565b806106c586610832565b6040516020016106d6929190610e46565b60405160208183030381529060405293505b5b505050919050565b6000807f99574a7094154bb123ae6ae102096f0bf9679b85a5cd1e727aaa0ae5f132e6b190508091505090565b6000807f334bcdc01ad42928dc76b974b9dc2d08aef6ae80f647d452bdc48c2baf971e8890508091505090565b60008061076b8361075a6107e5565b60000161099290919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d390610eb6565b60405180910390fd5b80915050919050565b6000807f3c7bf052874fa81625121783266a03507bd2cd48b16e571c01a04e8dd3fb07a690508091505090565b600061082a82846000016109af90919063ffffffff16565b905092915050565b606060008203610879576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061098d565b600082905060005b600082146108ab57808061089490610f05565b915050600a826108a49190610f7c565b9150610881565b60008167ffffffffffffffff8111156108c7576108c6610fad565b5b6040519080825280601f01601f1916602001820160405280156108f95781602001600182028036833780820191505090505b5090505b60008514610986576001826109129190610fdc565b9150600a856109219190611010565b603061092d9190611041565b60f81b81838151811061094357610942611097565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561097f9190610f7c565b94506108fd565b8093505050505b919050565b60006109a4836000018360001b6109c9565b60001c905092915050565b60006109c1836000018360001b610a5b565b905092915050565b60008083600101600084815260200190815260200160002054905060008103610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e90611112565b60405180910390fd5b836000016001820381548110610a4057610a3f611097565b5b90600052602060002090600202016001015491505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab8578082015181840152602081019050610a9d565b83811115610ac7576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ae982610a7e565b610af38185610a89565b9350610b03818560208601610a9a565b610b0c81610acd565b840191505092915050565b60006020820190508181036000830152610b318184610ade565b905092915050565b600080fd5b600080fd5b6000819050919050565b610b5681610b43565b8114610b6157600080fd5b50565b600081359050610b7381610b4d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610b9e57610b9d610b79565b5b8235905067ffffffffffffffff811115610bbb57610bba610b7e565b5b602083019150836001820283011115610bd757610bd6610b83565b5b9250929050565b600080600060408486031215610bf757610bf6610b39565b5b6000610c0586828701610b64565b935050602084013567ffffffffffffffff811115610c2657610c25610b3e565b5b610c3286828701610b88565b92509250509250925092565b600060208284031215610c5457610c53610b39565b5b6000610c6284828501610b64565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9682610c6b565b9050919050565b610ca681610c8b565b82525050565b6000602082019050610cc16000830184610c9d565b92915050565b610cd081610b43565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d3857607f821691505b602082108103610d4b57610d4a610cf1565b5b50919050565b600081905092915050565b82818337600083830152505050565b6000610d778385610d51565b9350610d84838584610d5c565b82840190509392505050565b6000610d9d828486610d6b565b91508190509392505050565b7f4e465420646f6573206e6f742065786973740000000000000000000000000000600082015250565b6000610ddf601283610a89565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b6000610e2082610a7e565b610e2a8185610d51565b9350610e3a818560208601610a9a565b80840191505092915050565b6000610e528285610e15565b9150610e5e8284610e15565b91508190509392505050565b7f4552433732313a20696e76616c6964206f776e65720000000000000000000000600082015250565b6000610ea0601583610a89565b9150610eab82610e6a565b602082019050919050565b60006020820190508181036000830152610ecf81610e93565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f1082610b43565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f4257610f41610ed6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f8782610b43565b9150610f9283610b43565b925082610fa257610fa1610f4d565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610fe782610b43565b9150610ff283610b43565b92508282101561100557611004610ed6565b5b828203905092915050565b600061101b82610b43565b915061102683610b43565b92508261103657611035610f4d565b5b828206905092915050565b600061104c82610b43565b915061105783610b43565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561108c5761108b610ed6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000600082015250565b60006110fc601e83610a89565b9150611107826110c6565b602082019050919050565b6000602082019050818103600083015261112b816110ef565b905091905056fea2646970667358221220dbcf1056d17cf2caaa3196811aca08ce20f13827ab39c43407f470547ffd1a9964736f6c634300080d0033";

export class Getter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getter> {
    return super.deploy(overrides || {}) as Promise<Getter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Getter {
    return super.attach(address) as Getter;
  }
  connect(signer: Signer): Getter__factory {
    return super.connect(signer) as Getter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetterInterface {
    return new utils.Interface(_abi) as GetterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Getter {
    return new Contract(address, _abi, signerOrProvider) as Getter;
  }
}
